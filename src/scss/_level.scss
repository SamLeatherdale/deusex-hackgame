.level-pan-container {
    overflow: hidden;
    cursor: move !important;
    height: 100%;

    &:focus {
        outline: 0;
    }
}
.level-container {
    //position: relative;
    //overflow: hidden;
}
.level-grid-container {
    position: relative;
}
.level-grid {
    position: relative;
}
.level-node-grid {
    @include flex-center;
    padding: 50px;
}
.level-node {
    width: 80px;
    height: 100px;
    position: relative;
    cursor: pointer;

    &[data-disabled] {
        cursor: inherit;
        opacity: 0.3;
    }

    div.level-node-img {
        width: 100%;
        height: 100%;
        background-position: center;
        background-repeat: no-repeat;
        background-size: contain;
    }

    .level-node-level-text {
        color: white;
        position: absolute;
        z-index: $zindex-node-level-text;
        top: 50%;
        right: 8px;
        transform: translateY(-50%);
        font-size: 18px;
    }

    .level-node-badge {
        position: absolute;
        z-index: $zindex-node-badge;
        padding: 4px 6px;
        border-radius: 4px;
        color: white;

        &:before {
            content: '+';
        }

        &[data-badge='fortify'] {
            top: 0;
            right: 0;
            background-color: $capture-color;
        }
        &[data-badge='server'] {
            bottom: 0;
            right: 0;
            background-color: $server-capture-bg;
        }
    }

    .node-mask-container {
        $capturing-opacity: 0.2;
        $captured-opacity: 0.5;
        mask-position: center;
        mask-repeat: no-repeat;
        position: absolute;
        z-index: $zindex-node-mask;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;

        display: flex;
        flex-direction: column;
        justify-content: flex-end;

        .node-mask {
            content: '';
            display: block;
            width: 100%;
            height: 0;
            order: 1;

            &[data-capturing] {
                animation-name: $animation-capture;
                animation-timing-function: linear;
                animation-iteration-count: 1;
                animation-duration: inherit; //Set on parent
            }
            &[data-paused] {
                animation-play-state: paused;
            }
            &[data-capturing='user'] {
                background-color: rgba($capture-color, $capturing-opacity);
            }
            &[data-capturing='server'] {
                background-color: rgba($server-capture-color, $capturing-opacity);
            }
            &[data-capturing='fortify'] {
                background-color: rgba($fortify-color, $capturing-opacity);
            }
            &[data-captured] {
                z-index: $zindex-node-mask-captured;
                height: 100%;
                background-color: rgba($capture-color, $captured-opacity);
            }
        }

        .node-capture-percent {
            width: 100%;
            height: 0;
            overflow: visible;
            color: white;
            z-index: 1;
            text-align: center;
        }
    }
}
.node-menu {
    position: absolute;
    z-index: $zindex-node-menu;
    cursor: default;

    $menu-item-width: 65px;
    $menu-item-height: 50px;

    .node-menu-items {
        @include custom-hex(35%);
        box-sizing: content-box;
        margin: 0;
        padding: 16px;

        background-color: $dx-bg-dark;
        opacity: 0.9;

        > div {
            &:first-child, &:last-child {
                display: flex;
                justify-content: center;
            }

            &:nth-child(2) {
                display: flex;
                justify-content: space-between;
                margin: -20px 0;
                width: $menu-item-width * 2.5;
            }
        }
    }

    .node-menu-item {
        @include custom-hex(35%);
        @include flex-center;
        width: $menu-item-width;
        height: $menu-item-height;
        background-color: darken($dx-menu-item-highlight, 30%);
        cursor: pointer;

        i {
            color: $dx-menu-item-highlight;
            font-size: 30px;
        }

        &[data-disabled] {
            background-color: transparent;
            cursor: not-allowed;

            i {
                color: $dx-menu-icon-disabled;
            }
        }

        &:hover:not([data-disabled]) {
            background-color: $dx-menu-item-highlight;

            i {
                color: $dx-menu-icon-hover;
            }
        }
    }

    .node-menu-tooltip {
        position: absolute;
        background-color: $bg-default;
        color: white;
        z-index: 1;

        $vertical: ("top", "bottom");
        $horizontal: ("left", "right");
        $placements: join($vertical, $horizontal);
        $transform-amount: (-100%, 100%);

        @each $pos in $placements {
            &[data-placement=#{$pos}] {
                #{$pos}: 0;

                $index: index($vertical, $pos);
                @if ($index) {
                    transform: translateX(-50%) translateY(nth($transform-amount, $index));
                    left: 50%;
                } @else {
                    $index: index($horizontal, $pos);
                    transform: translateY(-50%) translateX(nth($transform-amount, $index));
                    top: 50%;
                }
            }
        }

        > div {
            text-transform: uppercase;
            white-space: nowrap;
        }
    }
}
.level-connector-container {
    position: absolute;
    top: 0;
    left: 0;
}

.level-connector {
    $border-width: 2px;
    $border-style: dashed;
    $border-style-bidi: solid;
    position: absolute;
    width: 8px;
    //border-width: 0;
    //border-left-width: $border-width;
    //border-right-width: $border-width;
    //border-color: white;
    //border-style: $border-style;

    //Align arrow at center
    display: flex;
    align-items: center;
    justify-content: space-between;

    &[data-disabled] {
        opacity: 0.3;
    }

    $line-width: 2.5px; //Avoid subpixel rendering issues

    @mixin line-image($color, $size: 70%) {
        background-image: linear-gradient(
                to bottom,
                $color,
                $color $size,
                rgba(white, 0) $size + 1%);
        background-position: top;
        background-size: $line-width 8px;
        background-repeat: repeat-y;
    }

    .level-connector-line {
        width: $line-width;
        height: 100%;
        display: flex;
        position: relative;
        @include line-image(white);

        &[data-capture] {
            &:before {
                content: '';
                position: absolute;
                align-self: flex-start;
                width: 100%;
            }

            &[data-line='user'] {
                &:before {
                    @include line-image($capture-color);
                }
            }
            &[data-line='server'] {
                &:before {
                    @include line-image($server-capture-color);
                }
            }

            &[data-reverse] {
                &:before {
                    align-self: flex-end;
                }
            }
        }

        &[data-capture='capturing'] {
            &:before {
                height: 0;
                animation-name: $animation-capture;
                animation-timing-function: linear;
                animation-iteration-count: 1;
                animation-duration: inherit; //Set on parent
            }
        }
        &[data-paused] {
            &:before {
                animation-play-state: paused;
            }
        }

        &[data-capture='captured'] {
            &:before {
                height: 100%;
            }
        }
    }

    &[data-bidi] {
        .level-connector-line {
            background: white;

            &[data-capture] {
                &[data-line='user'] {
                    &:before {
                        background: $capture-color;
                    }
                }
                &[data-line='server'] {
                    &:before {
                        background: $server-capture-color;
                    }
                }
            }
        }
    }

    .level-connector-center {
        width: 1px;
        overflow: visible;
        display: flex;
        justify-content: center;
        z-index: 1;

        .level-connector-arrow {
            &:after {
                display: block;
                content: '‚Æù';
                font-size: 30px;
                color: white;
            }
        }
    }
}

