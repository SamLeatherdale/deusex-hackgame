.level-grid {
    position: relative;
}
.level-node {
    display: flex;
    justify-content: center;
    align-items: center;

    &[data-disabled] {
        opacity: 0.3;
    }

    &[data-captured] {
        border: 1px solid lightskyblue;
    }

    > div {
        background-position: center;
        background-repeat: no-repeat;
        background-size: contain;
    }


    .node-menu {
        position: absolute;

        $menu-item-width: 65px;
        $menu-item-height: 50px;

        .node-menu-items {
            @include custom-hex(35%);
            box-sizing: content-box;
            margin: 0;
            padding: 16px;

            background-color: $dx-bg-dark;
            opacity: 0.9;

            > div {
                &:first-child, &:last-child {
                    display: flex;
                    justify-content: center;
                }

                &:nth-child(2) {
                    display: flex;
                    justify-content: space-between;
                    margin: -20px 0;
                    width: $menu-item-width * 2.5;
                }
            }
        }

        .node-menu-item {
            @include custom-hex(35%);
            @include flex-center;
            width: $menu-item-width;
            height: $menu-item-height;
            background-color: darken($dx-menu-item-highlight, 30%);

            i {
                color: $dx-menu-item-highlight;
                font-size: 30px;
            }

            &[data-disabled] {
                background-color: transparent;
                i {
                    color: $dx-menu-icon-disabled;
                }
            }

            &:hover:not([data-disabled]) {
                background-color: $dx-menu-item-highlight;

                i {
                    color: $dx-menu-icon-hover;
                }
            }
        }

        .node-menu-tooltip {
            position: absolute;
            background-color: black;
            color: white;
            z-index: 5;

            $vertical: ("top", "bottom");
            $horizontal: ("left", "right");
            $placements: join($vertical, $horizontal);
            $transform-amount: (-100%, 100%);

            @each $pos in $placements {
                &[data-placement=#{$pos}] {
                    #{$pos}: 0;

                    $index: index($vertical, $pos);
                    @if ($index) {
                        transform: translateX(-50%) translateY(nth($transform-amount, $index));
                        left: 50%;
                    } @else {
                        $index: index($horizontal, $pos);
                        transform: translateY(-50%) translateX(nth($transform-amount, $index));
                        top: 50%;
                    }
                }
            }

            > div {
                text-transform: uppercase;
                white-space: nowrap;
            }
        }
    }
}
.level-connector {
    $border-width: 2px;
    position: absolute;
    width: 8px;
    border-width: 0;
    border-left-width: $border-width;
    border-right-width: $border-width;
    border-color: white;
    border-style: dashed;

    //Align arrow at center
    display: flex;
    align-items: center;
    justify-content: center;

    &[data-bidi] {
        border-style: solid;
    }

    &[data-disabled] {
        opacity: 0.3;
    }

    .level-connector-arrow {
        &:after {
            display: block;
            content: '‚Æù';
            font-size: 30px;
            color: white;
        }
    }
}
